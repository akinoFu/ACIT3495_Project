# apiVersion: v1
# kind: Secret
# metadata:
#   name: mysql-secret
# data:
#   MYSQL_ROOT_PASSWORD: Z3JvdXAxMAo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    create database if not exists project;
    use project;
    create table if not exists grades (
      name varchar(250) not null,
      subject varchar(250) not null,
      grade int not null);
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: gradeapp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: gradeapp-mysql
  labels:
    app: gradeapp
spec:
  ports:
    - port: 3306
  selector:
    app: gradeapp
    tier: mysql
  clusterIP: None
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: gradeapp-mysql
  labels:
    app: gradeapp
spec:
  selector:
    matchLabels:
      app: gradeapp
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gradeapp
        tier: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: "group10"
        # - name: MYSQL_ROOT_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: mysql-secret
        #       key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config